@startuml Alert System
title Alert System UML Diagram

package com.alerts {
  class Alert {
    - patientId: String
    - condition: String
    - timestamp: long

    + Alert(patientId: String, condition: String, timestamp: long)
    + getPatientId(): String
    + getCondition(): String
    + getTimestamp(): long
  }

  class AlertGenerator {
    - dataStorage: DataStorage
    - strategies: List<AlertStrategy>
    
    + AlertGenerator(dataStorage: DataStorage)
    + evaluateData(patient: Patient): void
    - triggerAlert(alert: Alert): void
  }

  class AlertManager {
    + dispatch(alert: Alert): void
  }

  interface AlertStrategy {
    + shouldTrigger(patient: Patient): boolean
    + createAlert(patient: Patient): Alert
  }

  class DangerousHeartRateStrategy implements AlertStrategy {
    + shouldTrigger(patient: Patient): boolean
    + createAlert(patient: Patient): Alert
  }

  class LowCholesterolStrategy implements AlertStrategy {
    + shouldTrigger(patient: Patient): boolean
    + createAlert(patient: Patient): Alert
  }
  
}

package com.data_management {
    class DataStorage {
        - patientMap: Map<Integer, Patient>

        + addPatientData(patientId: int, measurementValue: double, recordType: String, timestamp: long): void
        + getRecords(patientId: int, startTime: long, endTime: long): List<PatientRecord>
        + getAllPatients(): List<Patient>
    }

    class Patient {
        - patientId: int
        - patientRecords: List<PatientRecord>

        + addRecord(measurementValue: double, recordType: String, timestamp: long): void
        + getRecords(startTime: long, endTime: long): List<PatientRecord>
    }

    class PatientRecord {
        - patientId: int
        - recordType: String
        - measurementValue: double
        - timestamp: long
        + getPatientId(): int
        + getMeasurementValue(): double
        + getTimestamp(): long
        + getRecordType(): String
    }
}

AlertGenerator --> Alert : creates
AlertGenerator --> Patient : evaluates
AlertGenerator --> DataStorage : uses
AlertGenerator "1" --> "1" AlertManager : delegates to
AlertManager --> Alert : dispatches
AlertGenerator "1" --> "1..*" AlertStrategy : uses
DataStorage "1" o-- "0..*" Patient : manages
Patient "1" *-- "0..*" PatientRecord : owns
@enduml